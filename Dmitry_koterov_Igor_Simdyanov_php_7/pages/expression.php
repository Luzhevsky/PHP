<!DOCTYPE html>
<html>
<head>
    <title>Library</title>
    <link rel="stylesheet" href="..\css\main.css">
</head>
<body>
<?php require_once '../option/nav.php'; ?>
<?php require_once '../include/functions.php'; ?>
<?php

echo "<h1 align='center'>Выражения</h1>";

echo '<h2>Строки в кавычках</h2>';
echo 'Есть 3 способа как помочь интерпретатору выделить имя переменной из общего текста:<br>';
echo '$some = "hell";<br>';
echo 'echo $some."o world!"; // способ 1<br>';
echo 'echo {$some}o world!"; // способ 2<br>';
echo 'echo ${some}o world!"; // способ 3<br>';
echo '<b>способ 2 является лучшим, потому что таким образом можно вставлять элмементы массивов и свойство объектов.</b> <br>';
    $a = [
        "left" => "survive",
        "right" => "kill'em all"
    ];


    echo '<pre>';print_r($a); echo '</pre>';
    echo 'выбранный элемент:{$a[\'left\']} = ' . "{$a['left']}<br>";

    echo '<h2>Вызов внешней команды</h2>';
    echo 'строка в обратных апострофах `команда` позволяет выполнить команду операционной системы и то, что она вывела подстравить на место строки<br>';
    echo '$st = `command.com/c dir`<br>';

    $s = `command.com dir`;
    echo "<pre>$s</pre>";

    echo '<h2>Битовые операции</h2>';
    echo 'a & b - число с установленными битами, которые выставленны и в a, и в b одоновременно.<br>';
    echo 'Пример: $a = 4; //0100 <br>';
    echo '$b = 12; //1100 <br>';
    $a = 4;
    $b = 12;
    echo '$a & $b = ' . ($a & $b) .'////0100<br><br>';

    echo 'a | b - число с установленными битами, которые выставленны либо a, либо b, либо a и b одновременно.<br>';
    echo '$a | $b = ' . ($a | $b) .'////1100<br><br>';

    echo 'a ^ b - число с установленными битами, которые выставленны либо a, либо b.<br>';
    echo '$a ^ $b = ' . ($a ^ $b) .'////1000<br>';

    echo '<h2>Операции сравнения</h2>';
    $mas = [
            "a == b" => "Истина, если a равно b",
            "a != b" => "Истина, если a не равно b",
            "a === b" => "Истина, если a эквивалентно b",
            "a !== b" => "Истина, если a не эквивалентно b",
            "a < b" => "Истина, если a меньше b",
            "a > b" => "Истина, если a больше b",
            "a <= b" => "Истина, если a меньши либо равно b",
            "a >= b" => "Истина, если a больше либо равно b",
            "a <=> b" => "Возвращеет -1, если а меньше b, 0 если a = b, 1 если a b",
    ];
        foreach($mas as $m => $val){
            echo '<li>' . $m . ' - ' . $val . '</li>';
        }

    echo '<h2>Особенности операторов == и !=</h2>';
    echo '<b>1.</b>Если сравниваем значение с булевым true или false, то все значение будут считаться как булево, тоесть: все true кроме 0, пустой строки и false.<br>';
    echo '<b>2.</b>Если сравниваем значение с числом, то второе значение будет пытаться привестить к типу int.';

    echo '<h2>Логические операции</h2>';
    echo '<li> ! a - истинна, если a ложно, и наоборот </li>';
    echo '<li> a && b(and ниже приоритет) - истинна, если истинны и a, и b </li>';
    echo '<li> a || b(or ниже преоритет) - истинна, если истинны или a, или b, или оба операнда. </li>';

    echo '<h2>Операция отключения предупреждений</h2>';
    echo 'пишем знае @ перед любым выражением, ссобщение будет сохранено в переменной PHP $php_errormsg, которую можно проанализировать. 
    В настройках включить track_errors(включено по умолчанию).<br>';

    echo '<h2>Условные операции</h2>';
    echo 'Условный оператро <b>x ? y : z</b> если выражение x истинно, то выводим y, если ложно выводим z<br>';
    echo 'Допускается не указывать средний параметр условного оператора. Такой способ позволяет проверить инициализирована ли переменная и если нет,то 
            присвоить ей начальное значение. <br><br>';
    echo '$x = $x ?: 1; echo $x - если если значение $x отличается от 0, null, пустой строки, тогда ей присаевается 1. В противном случае значение не изменяется.<br><br>';
    echo 'Оператор ?? возоращает значение переменной не равной null, при этоп проверяет на существование элемента и не генерирует замечание
        в случае отсутсвия одного из них.<br>';

?>
</body>
</html>

<!--Синтаксис языка php-->
<!--Массивы: одномерные, многомерные, ассоциативные-->
<!--Управляющие конструкции: if, switch, циклы (for, foreach, while)-->
<!--Циклы foreach при работе с многомерными ассоциативными массивами-->
<!--Базовые алгоритмы: сортировка, поиск минимума и максимума, циклический сдвиг-->
