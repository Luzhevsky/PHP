<!DOCTYPE html>
<html>
<head>
    <title>Library</title>
    <link rel="stylesheet" href="..\css\main.css">
</head>
<body>
<?php require_once '../option/nav.php'; ?>
<?php require_once '../include/functions.php'; ?>


<h1 align='center'>Строковые функции</h1>
    <h2>Строковые функции</h2>
        <p>
            КОдировка ASCII. Функция 'chr()' позволяет получить рспечатать коды символов. Обратная функция 'ord()'.
        </p>
        <pre>
            for($code = 32; $code < 128; $code++){
                echo "code ($code)=".chr($code)." ";
            }
        </pre>
        <?php
            for($code = 32; $code < 128; $code++){
                echo "code ($code)=".chr($code)."<br />";
            }
        ?>
    <h2>UTF и PHP</h2>
        <p>
            В PHP 7 символы из кодировки UTF-8 могут быть заданы при помощи специального синтаксиса. в строках указывается
            последовательность \u после которой следует шестнадцатеричный код символа в фигурных скобках. "\u{0410}".
        </p>
        <pre>
            echo "\u{0410}"; //коды русской буквы А.
            echo "&ltbr /&gt ";
        </pre>
        <?php
            echo "\u{0410}";
            echo "<br />";
        ?>
        <p>
            Проблемы с поддержкой UTF-8 на уровне языка Php.
        </p>
        <pre>
            $str = "hello world";
            echo "{$str[2]}&ltbr /&gt";
            $str = "Привет, мир!";
            echo "{$str[2]}&ltbr /&gt";
            echo strlen($str);
        </pre>
        <?php
            $str = "hello world";
            echo "{$str[2]}<br />";
            $str = "Привет, мир!";
            echo "{$str[2]}<br />";
            echo strlen($str);
        ?>

        <p>
            Проблема до сих пор не решена, однако для выкуручивания(танцы с бубнами) можно подключить расширение mbstring
            для этого заходим в php.ini находим и разкомментируем(убераем ;) extension_dir = "ext" и extention=php_mbstring.dll.
            <b style="font-size:15px; color: red;">Если используешь локальный встроенный php ИЗМЕНИ php.ini-development на php.ini</b>
        </p>
        <pre>
            $str = "Привет, мир!";
            echo "В строке &quot;$str&quot; ".strlen($str). " байт&ltbr /&gt";
            echo "В строке &quot;$str&quot; ".mb_strlen($str). " символов&ltbr /&gt";
        </pre>
        <?php
            $str = "Привет, мир!";
            echo "В строке &quot;$str&quot; ".strlen($str). " байт<br />";
            echo "В строке &quot;$str&quot; ".mb_strlen($str). " символов<br />";
        ?>

    <h2>Конкатенация строк</h2>
        <p>
            Раньше использовался плюс. Сейчас только ".". После использования точки пытается превести
            левые и правые части к строковым значениям, если не может то воспринимает как объект object или
            array массив. Например:
        </p>
        <pre>
            $a = [10, 20, 30];
            echo "asdf " .$a;// ошибка
        </pre>
        <?php
            $a = [10, 20, 30];
            echo "asdf " .$a;
        ?>
        <p>
            Более специалецированный способ использования кавычек в которых указывается переменные. Пример:
        </p>
        <pre>
            $day = 19;
            $month = "Февраль";
            $year = 2020;
            echo "Все произошло $day $month $year";
        </pre>
        <?php
            $day = 19;
            $month = "Февраль";
            $year = 2020;
            echo "Все произошло $day $month $year";
        ?>
    <h2>О сравнении строк</h2>
        <p>
            ПРи использовании оператроа == и =! со строками иногда результат не соответствует ожиданиям.
        </p>
        <pre>
            $one = 1;
            $zero = 0;
            if($one == "") echo 1;// Не верно не будет напечатно 1
            if($zero == "") echo 2;// Верно будет напеччатано 2
            if("" == $zero) echo 3;// верно будет наапечатано 3
            if("$zero" == "") echo 4;// Не верно не будет напечатно 4. Строка "0" не равно пустой строке.
            if(strval($zero) == "") echo 5;// Не верно не будет напечатно 5. strval($zero) переведет 0 в строку.
            if($zero === "") echo 6;// Не верно не будет напечатно 6. тройное равентство === сравнивает не только значения но и типы.
        </pre>
        <?php
            $one = 1;
            $zero = 0;
            if($one == "") echo 1;// Не верно не будет напечатно 1
            if($zero == "") echo 2;// Верно будет напеччатано 2
            if("" == $zero) echo 3;// верно будет наапечатано 3
            if("$zero" == "") echo 4;// Не верно не будет напечатно 4. Строка "0" не равно пустой строке.
            if(strval($zero) == "") echo 5;// Не верно не будет напечатно 5. strval($zero) переведет 0 в строку.
            if($zero === "") echo 6;// Не верно не будет напечатно 6. тройное равентство === сравнивает не только значения но и типы.
        ?>
    <h2>Особенности strpos()</h2>
        <p>
            Ошибка с которой можно встретится используя if и strpos(). Пусть у нас есть строка
            и мы должны напечаттать сообщение если символ например "<" найден в этой строке. Пишем
            нашу проверку:
        </p>
        <pre>
            $str = "<&lt?php echo 'asdf323f';";
            if(strpos($str, "&lt?") != false){
                echo "Это php-программа";
            } else {
                "Нет";
            }
        </pre>
        <?php
            $str = "<?php echo 'asdf323f';";
            if(strpos($str, "<?") != false){
                echo "Это php-программа";
            } else {
                echo "Нет, не php";
            }
        ?>
        <p>
            В чем дело?? почему нет? А дело в том что strpos возвращает нам 0 так как
            символ находится на нулевой позиции, а ноль это false. Так что нужно использовать оператор !==
        </p>
        <pre>
            $str = "<&lt?php echo 'asdf323f';";
            if(strpos($str, "&lt?") !== false){
                echo "Это php-программа";
            } else {
                "Нет";
            }
        </pre>
        <?php
            $str = "<?php echo 'asdf323f';";
            if(strpos($str, "<?") !== false){
                echo "Это php-программа";
            } else {
                echo "Нет, не php";
            }
        ?>

    <h2>Отрезания пробелов</h2>
        <p>

        </p>
</body>
</html>


